% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amap.R
\name{amap}
\alias{amap}
\title{Produces a new collection of values by mapping each value in collection
through the iteratee function}
\usage{
amap(coll, iteratee, callback)
}
\arguments{
\item{coll}{A collection to iterate over.}

\item{iteratee}{An async function to apply to each item in \code{coll}. The
iteratee should complete with the transformed item. Invoked with
\code{(item, callback)}.}

\item{callback}{A callback which is called when all iteratee functions
have finished, or an error occurs. The result is a list of the
transformed items from the \code{coll}. Invoked with \code{(err, result)}.}
}
\value{
A task id, that can be waited on with \code{\link[=wait_for]{wait_for()}}.
}
\description{
The \code{iteratee} is called with an item from \code{coll} and a callback for
when it has finished processing. Each of these callback takes 2
arguments: an error, and the transformed item from coll. If iteratee
passes an error to its callback, the main callback (for the map
function) is immediately called with the error.
}
\details{
Note, that since this function applies the iteratee to each item in
parallel, there is no guarantee that the iteratee functions will
complete in order. However, the results array will be in the same order
as the original \code{coll}.
}
\examples{
error <- result <- NULL
id <- amap(
  seq(10, 100, by = 10) / 100,
  function(delay, callback) {
    set_timeout(delay, function() callback(NULL, "OK"))
  },
  function(err, res) { error <<- err; result <<- res }
)
error
result

wait_for(id)
error
result
}
\seealso{
Other async iterators: \code{\link{detect_limit}},
  \code{\link{detect_series}}, \code{\link{detect}},
  \code{\link{each}}, \code{\link{every}},
  \code{\link{filter}}, \code{\link{some}}
}
