% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/waterfall.R
\name{waterfall}
\alias{waterfall}
\title{Runs the tasks array of functions in series}
\usage{
waterfall(tasks, callback)
}
\arguments{
\item{tasks}{An array of async functions to run. Each function should
complete with any number of result values. The result values will be
passed as arguments, in order, to the next task.}

\item{callback}{A callback to run once all the functions have
completed. This will be passed the results of the last task's
callback. Invoked with \code{(err, [results])}.}
}
\value{
Task id.
}
\description{
Eeach task is passing its result to the next in the array.
However, if any of the tasks pass an error to their own callback, the
next function is not executed, and the main
callback is immediately called with the error.
}
\examples{
wait_for(waterfall(
  list(
    function(callback) callback(NULL, 'one', 'two'),
    function(arg1, arg2, callback) {
      ## arg1 now equals 'one' and arg2 now equals 'two'
      callback(NULL, 'three');
    },
    function(arg1, callback) {
      ## arg1 now equals 'three'
      callback(NULL, 'done');
    }
  ),
  function (err, result) print(result)
))
}
\seealso{
Other async control flow: \code{\link{parallel_limit}},
  \code{\link{parallel}}, \code{\link{retryable}},
  \code{\link{retry}}, \code{\link{sequence}},
  \code{\link{until}}, \code{\link{whilst}}
}
