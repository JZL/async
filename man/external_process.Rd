% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xprocess.R
\name{external_process}
\alias{external_process}
\title{Extarnal process via a process generator}
\usage{
external_process(process_generator, error_on_status = TRUE, ...)
}
\arguments{
\item{process_generator}{Function that returns a \link[processx:process]{processx::process}
object. See details below about the current requirements for the
returned process.}

\item{error_on_status}{Whether to fail if the process terminates
with a non-zero exit status.}

\item{...}{Extra arguments, passed to \code{process_generator}.}
}
\value{
Deferred object.

Current requirements for \code{process_generator}:
\itemize{
\item It must take a \code{...} argument, and pass it to
\code{processx::process$new()}.
\item It must use the \code{poll_connection = TRUE} argument.
\item It must use files for \code{stdout} and \code{stderr}. E.g. it may use
\code{\link[=tempfile]{tempfile()}} to redirect standard output and error to temporary
files.
These requirements might be relaxed in the future.
}
}
\description{
Wrap any \link[processx:process]{processx::process} object into a deferred value. The
process is created by a generator function.
}
\examples{
\dontrun{
lsgen <- function(dir = ".", ...) {
  processx::process$new(
    "ls",
    dir,
    poll_connection = TRUE,
    stdout = tempfile(),
    stderr = tempfile(),
    ...
  )
}
afun <- function() {
  external_process(lsgen)
}
synchronise(afun())
}
}
