% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/each.R
\name{each}
\alias{each}
\title{Applies an iteratee to each item in collection, in parallel}
\usage{
each(coll, iteratee, callback)
}
\arguments{
\item{coll}{A collection to iterate over.}

\item{iteratee}{An async function to apply to each item in \code{coll}.
Invoked with \code{(item, callback)}. The array index is not passed to the
iteratee. If  you need the index, use \code{\link[=each_of]{each_of()}}.}

\item{callback}{A callback which is called when all iteratee functions
have finished, or an error occurs. Invoked with \code{(err)}.}
}
\value{
Task id.
}
\description{
The \code{iteratee} is called with an item from the list, and a callback for
when it has finished. If the \code{iteratee} passes an error to its callback,
the main \code{callback} (for the \code{each} function) is immediately called with
the error.
}
\details{
Note, that since this function applies \code{iteratee} to each item in
parallel, there is no guarantee that the iteratee functions will
complete in order.
}
\examples{
## Check a list of URLs
urls <- c("https://httpbin.org/get", "https://httpbin.org/status/404")
check_url <- function(url, callback) {
  http_head(url, function(err, res) {
    if (!is.null(err)) {
      callback(err)
    } else if (res$status_code != 200) {
      callback(paste("HTTP error", res$status_code, res$url))
    } else {
      callback(NULL)
    }
  })
}

error <- NULL
wait_for(each(urls, check_url, function(err) error <<- err))
error
}
\seealso{
Other async iterators: \code{\link{amap}},
  \code{\link{detect_limit}}, \code{\link{detect_series}},
  \code{\link{detect}}, \code{\link{every}},
  \code{\link{filter}}, \code{\link{some}}
}
