% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{filter}
\alias{filter}
\title{Returns a new array of all the values in a collection which pass an
async truth test}
\usage{
filter(coll, iteratee, callback)
}
\arguments{
\item{coll}{A collection to iterate over. It needs to have an \code{[}
operator.}

\item{iteratee}{A truth test to apply to each item in \code{coll}.
The \code{iteratee} is passed a \code{callback(err, truthValue)}, which must be
called with a logical argument once it has completed. Invoked with
\code{(item, callback)}.}

\item{callback}{A callback which is called after all the iteratee
functions have finished. Invoked with \code{(err, results)}.}
}
\value{
Task id.
}
\description{
This operation is performed in parallel, but the results array
will be in the same order as the original.
}
\examples{
## Filter out non-working URLs
urls <- c("https://httpbin.org/get", "https://httpbin.org/status/404")
test_url <- function(url, callback) {
  http_head(url, function(err, res) {
    callback(NULL, is.null(err) && res$status_code == 200)
  })
}

result <- NULL
wait_for(filter(urls, test_url, function(err, res) result <<- res))
result
}
\seealso{
Other async iterators: \code{\link{amap}},
  \code{\link{detect_limit}}, \code{\link{detect_series}},
  \code{\link{detect}}, \code{\link{each}},
  \code{\link{every}}, \code{\link{some}}
}
