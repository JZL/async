% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retryable.R
\name{retryable}
\alias{retryable}
\title{Make a task retryable}
\usage{
retryable(task, times)
}
\arguments{
\item{task}{The asynchronous function to wrap. This function will be
passed any arguments passed to the returned wrapper. Invoked with
\code{(..., callback)}.}

\item{times}{The number of attempts to make before giving up.}
}
\value{
The wrapped asynchronous function.
}
\description{
A close relative of \code{\link[=retry]{retry()}}. This method wraps a task and makes it
retryable, rather than immediately calling it with retries.
}
\examples{
http_get_harder <- retryable(http_get, 5)
result <- NULL
await(http_get_harder(
  url = "https://httpbin.org",
  callback = function(err, res) result <<- res
))
result$status_code
}
\seealso{
Other async control flow: \code{\link{parallel_limit}},
  \code{\link{parallel}}, \code{\link{retry}},
  \code{\link{sequence}}, \code{\link{until}},
  \code{\link{waterfall}}, \code{\link{whilst}}
}
