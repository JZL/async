% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event-loop.R
\name{event_loop}
\alias{event_loop}
\title{Event loop}
\description{
Event loop
}
\section{Usage}{
\preformatted{el <- event_loop$new()

el$run_http(handle, callback)
el$run_delay(delay, callback)
}
}

\section{Arguments}{

\describe{
\item{ids}{The task ids to wait for.}
\item{handle}{A \code{curl} handle to use for the \code{HTTP} operation.}
\item{callback}{Callback function to call when the asynchronous
operation is done. See details below.}
\item{delay}{Number of seconds to delay the execution of the callback.}
\item{...}{Additional arguments to store in the task. These are
currently not used for anything.}
}
}

\section{Details}{

\code{$run_http()} starts an asynchronous HTTP request, with the specified
\code{curl} handle. Once the request is done, and the response is available
(or an error happens), the callback is called with two arguments, the
error object or message (if any) and the \code{curl} response object.

\code{$run_delay()} starts a task with the specified delay.
}

\section{The default event loop}{


The \code{async} package creates a default event loop when it is loaded.
All asyncronous constructs use this event loop by default.
}

\keyword{internal}
