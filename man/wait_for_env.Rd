% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/await_env.R
\name{wait_for_env}
\alias{wait_for_env}
\title{Wait for all deferred values in an environment}
\usage{
wait_for_env(env)
}
\arguments{
\item{env}{Environment to wait on. An error is thrown if not an
environment.}
}
\value{
A named list of resolved values. An unhandled rejection make
\code{wait_for_env} throw an error. Note that since the environment is a hash,
the order of the values is arbitrary.
}
\description{
The function returns when all deferred values are resolved (or
rejected).
}
\details{
It is permitted to change the environment (from within the async
functions, as the is no synchronous code running and R is single
threaded) while the wait is taking place. This allows waiting on a
dynamic set of async operations.
}
\examples{
## dynamically change the async operations we are waiting on
env <- new.env()
env$foo <- delay(1/10000)$
  then(function() {
    env$foo2 <- async_constant("OK2")
    "OK"
  })
wait_for_env(env)
}
\seealso{
Other wait_for functions: \code{\link{wait_for_all}},
  \code{\link{wait_for_any}}, \code{\link{wait_for}}
}
