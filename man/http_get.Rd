% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/http.R
\name{http_get}
\alias{http_get}
\title{Asynchronous HTTP GET request}
\usage{
http_get(url, headers = character(), file = NULL, options = list(timeout =
  600), on_progress = NULL)
}
\arguments{
\item{url}{URL to connect to.}

\item{headers}{HTTP headers to send.}

\item{file}{If not \code{NULL}, it must be a string, specifying a file.
The body of the response is written to this file.}

\item{options}{Options to set on the handle. Passed to
\code{\link[curl:handle_setopt]{curl::handle_setopt()}}.}

\item{on_progress}{Progress handler function. It is only used if the
response body is written to a file. See details below.}
}
\value{
Deferred object.
}
\description{
Start an HTTP GET request in the background, and report its completion
via a deferred.
}
\section{Progress bars}{


\code{http_get} can report on the progress of the download, via the
\code{on_progress} argument. This is called with a list, that describes an
event that happened to the HTTP request. The list will always have an
\code{event} entry, which is set to the string \code{"data"} or \code{"done"}.
The former means that some data was received, that latter means that
the request is done. Additional list entries:
\itemize{
\item \code{status_code}: the HTTP status code.
\item \code{total}: the total number of bytes.
\item \code{amount}: the number of bytes received so far.
\item \code{ratio}: the ratio of the bytes already received. This is \code{NULL} if
the size of the response is unknown.
}

Note that \code{on_progress} is currently only used for downloads that write
to the disk. This will be fixed in the future:
\url{https://github.com/r-lib/async/issues/40}
}

\examples{
afun <- async(function() {
  http_get("https://eu.httpbin.org/status/200")$
    then(~ .$status_code)
})
synchronise(afun())
}
\seealso{
Other asyncronous HTTP calls: \code{\link{http_head}}
}
